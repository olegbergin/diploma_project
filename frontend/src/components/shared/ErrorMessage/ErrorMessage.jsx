/**
 * ErrorMessage Component - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫
 * 
 * @component
 * @param {Object} props - Component props
 * @param {string|Object} props.error - –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –∏–ª–∏ –æ–±—ä–µ–∫—Ç —Å –æ—à–∏–±–∫–∞–º–∏
 * @param {string} props.type - –¢–∏–ø –æ—à–∏–±–∫–∏: 'error', 'warning', 'info'
 * @param {Function} props.onRetry - Callback —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
 * @param {Function} props.onClose - Callback —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ—à–∏–±–∫–∏
 * @param {string} props.className - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã
 * @param {boolean} props.showIcon - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∏–∫–æ–Ω–∫—É
 * @returns {JSX.Element} Error message component
 */

import React from 'react';
import styles from './ErrorMessage.module.css';

const ErrorMessage = ({ 
  error, 
  type = 'error', 
  onRetry, 
  onClose, 
  className = '', 
  showIcon = true 
}) => {
  if (!error) return null;

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –ø–æ —Ç–∏–ø—É –æ—à–∏–±–∫–∏
  const getIcon = () => {
    switch (type) {
      case 'warning':
        return '‚ö†Ô∏è';
      case 'info':
        return '‚ÑπÔ∏è';
      case 'success':
        return '‚úÖ';
      default:
        return '‚ùå';
    }
  };

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
  const renderErrorContent = () => {
    // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ - —Å—Ç—Ä–æ–∫–∞
    if (typeof error === 'string') {
      return <p className={styles.errorText}>{error}</p>;
    }

    // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ - –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏ (–≤–∞–ª–∏–¥–∞—Ü–∏—è)
    if (typeof error === 'object' && error !== null) {
      return (
        <div className={styles.errorList}>
          {Object.entries(error).map(([field, message]) => (
            <div key={field} className={styles.errorItem}>
              <strong>{field}:</strong> {message}
            </div>
          ))}
        </div>
      );
    }

    return <p className={styles.errorText}>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞</p>;
  };

  const errorClass = `${styles.errorContainer} ${styles[type]} ${className}`;

  return (
    <div className={errorClass} role="alert" aria-live="polite">
      <div className={styles.errorContent}>
        {showIcon && (
          <span className={styles.errorIcon} aria-hidden="true">
            {getIcon()}
          </span>
        )}
        <div className={styles.errorMessage}>
          {renderErrorContent()}
        </div>
      </div>
      
      {(onRetry || onClose) && (
        <div className={styles.errorActions}>
          {onRetry && (
            <button
              className={`${styles.actionBtn} ${styles.retryBtn}`}
              onClick={onRetry}
              aria-label="–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É"
            >
              üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
            </button>
          )}
          {onClose && (
            <button
              className={`${styles.actionBtn} ${styles.closeBtn}`}
              onClick={onClose}
              aria-label="–ó–∞–∫—Ä—ã—Ç—å"
            >
              ‚úï
            </button>
          )}
        </div>
      )}
    </div>
  );
};

export default ErrorMessage;